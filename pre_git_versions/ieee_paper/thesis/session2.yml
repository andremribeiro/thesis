# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export RUN_TYPE=simulation; export UAV_TYPE=f550; export PLATFORM_CONFIG=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml; export CUSTOM_CONFIG=./config/custom_config.yaml; export WORLD_CONFIG=./config/world_config.yaml; export NETWORK_CONFIG=./config/network_config.yaml
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_file:=/home/andre/thesis/worlds/disaster.world gui:=false
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 2 $UAV_TYPE --enable-rangefinder --enable-ouster --ouster-model OS0-128 --use-gpu-ray --pos-file /home/andre/thesis/pos.yaml"
        # - waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_status status.launch
  - hw_api:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_px4_api api.launch
        - export UAV_NAME=uav2; waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_core core.launch
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_core core.launch
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
        - export UAV_NAME=uav2; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
  # - rviz:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav1; waitForControl; rosrun rviz rviz -d ./uav.rviz
  #       - export UAV_NAME=uav1; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
  #       - export UAV_NAME=uav1; waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  #       - export UAV_NAME=uav2; waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  - tf_connector:
      layout: tiled
      panes:
        - waitForTime; roslaunch tf_connector tf_connector.launch custom_config:=./config/tf_connector.yaml
  # - locus:
  #     layout: tiled
  #     panes:
  #       - waitForControl; source ~/mapping_ws/devel/setup.bash; roslaunch locus locus_uav.launch robot_namespace:=uav1
  #       - waitForControl; source ~/mapping_ws/devel/setup.bash; roslaunch locus locus_uav.launch robot_namespace:=uav2
  #       - waitForControl; source ~/mapping_ws/devel/setup.bash; roslaunch locus locus_jackal.launch
  # - mapplan:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav1; waitForHw; roslaunch mrs_octomap_mapping_planning mapplan.launch
  #         config_octomap_server:=./config/octomap_server.yaml
  #         config_octomap_planner:=./config/octomap_planner.yaml
  #         config_pcl_filter_ouster:=./config/ouster_filter_mapping.yaml
        # - export UAV_NAME=uav2; waitForHw; roslaunch mrs_octomap_mapping_planning mapplan.launch
        #   config_octomap_server:=./config/octomap_server.yaml
        #   config_octomap_planner:=./config/octomap_planner.yaml
        #   config_pcl_filter_ouster:=./config/ouster_filter_mapping.yaml
  - octomap:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForGazebo; sleep 10; source ~/mapping_ws/devel/setup.bash; roslaunch octomap_server octomap_mapping.launch ns:=$UAV_NAME
        - export UAV_NAME=uav2; waitForGazebo; sleep 10; source ~/mapping_ws/devel/setup.bash; roslaunch octomap_server octomap_mapping.launch ns:=$UAV_NAME
  - planner:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; sleep 10; roslaunch mrs_octomap_planner octomap_planner.launch custom_config:=./config/octomap_planner.yaml
        - export UAV_NAME=uav2; waitForControl; sleep 10; roslaunch mrs_octomap_planner octomap_planner.launch custom_config:=./config/octomap_planner.yaml
  - frontier_extraction:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; sleep 80; source ~/exploration_ws/devel/setup.bash; rosrun frontier_exploration frontier_extraction_two_uav
  - rosbag:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForGazebo; rosbag record /mappingCoverage1 /mappingCoverage2 /mergedMappingCoverage /uav1/estimation_manager/odom_main /uav2/estimation_manager/odom_main